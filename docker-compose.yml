version: '3.8'

services:
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    container_name: twitter-clone-nginx
    ports:
      - '80:80'
    volumes:
      # mount ./server in git repo to /app in docker container
      - type: bind
        source: ./server
        target: /app
      # mount ./docker/nginx/conf.d/ in git repo to /etc/nginx/conf.d/ in docker container
      - type: bind
        source: ./docker/nginx/conf.d/
        target: /etc/nginx/conf.d/
    depends_on:
      - server
    networks:
      - twitter-clone-network

  server:
    # NOTE: use image from dockerhub or build with docker compose file in the same directory, not both
    # image: twitter-clone-server:latest
    build:
      context: .
      dockerfile: docker/Dockerfile.dev
    restart: unless-stopped
    container_name: twitter-clone-server
    ports:
      - '4000:4000'

    volumes:
      # mount ./server in git repo to /app in docker container
      - type: bind
        source: ./server
        target: /app
    depends_on:
      - mongodb
    networks:
      - twitter-clone-network

  mongodb:
    image: mongo:latest
    restart: unless-stopped
    container_name: twitter-clone-mongodb
    ports:
      - '27017:27017'
    volumes:
      - type: volume
        source: mongodb-data
        target: /data/db
        volume:
          nocopy: true
      # create init user to readWrite database
      # - ./server/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    # environment:
    #   MONGODB_INITDB_ROOT_USERNAME: hieple
    #   MONGODB_INITDB_ROOT_PASSWORD: hieple
    #   MONGODB_INITDB_DATABASE: TwitterDev
    networks:
      - twitter-clone-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/TwitterDev --quiet
      interval: 10s
      timeout: 10s
      retries: 5

networks:
  twitter-clone-network:
    name: twitter-clone-network
    driver: bridge

volumes:
  mongodb-data:
    name: mongodb-data-twitter-clone
